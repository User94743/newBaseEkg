{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\my-app-master\\\\src\\\\components\\\\statistic\\\\statistic.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from \"react\";\nimport Menu from \"../menu/menuContainer\";\nimport BarChart from \"./barChart\";\nimport LineChart from \"./DoughnutChart\";\nimport PieChart from \"./pieChart\";\nimport style from './statistic.module.css';\nimport DoughnutChart from \"./DoughnutChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistic = _ref => {\n  _s();\n\n  let {\n    accidents,\n    listMachine,\n    addAccidentToState\n  } = _ref;\n  let listNkuSystem = [];\n\n  for (let i = 0; i < listMachine.length; i++) {\n    let tempSchema = listMachine[i].schema;\n\n    if (-1 === listNkuSystem.indexOf(tempSchema)) {\n      listNkuSystem.push(tempSchema);\n    }\n  }\n\n  for (let j = 0; j < listNkuSystem.length; j++) {\n    listNkuSystem[j] = {\n      schema: listNkuSystem[j],\n      count: 0\n    };\n\n    for (let k = 0; k < listMachine.length; k++) {\n      if (listNkuSystem[j].schema === listMachine[k].schema) {\n        listNkuSystem[j].count = listNkuSystem[j].count + 1;\n      }\n    }\n  }\n\n  function GraphicDataFunc() {\n    let acc = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : accidents;\n    let arrayGraphicData = [];\n    listMachine.map(machine => arrayGraphicData.push({\n      machineNum: Number(machine.number),\n      countAccident: acc.filter(accident => Number(accident.numberMachine) === Number(machine.number)).length,\n      nku: machine.schema\n    }));\n    return arrayGraphicData;\n  }\n\n  let onDataChange = e => {\n    let valueNku = e.currentTarget.value;\n    let tempGraphicData = GraphicDataFunc();\n\n    if (valueNku === 'Все НКУ') {\n      setUserData(mainState(tempGraphicData, valueNku));\n    } else {\n      tempGraphicData = tempGraphicData.filter(dataNku => dataNku.nku === valueNku);\n      setUserData(mainState(tempGraphicData, valueNku));\n    }\n  }; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n\n  const [userData, setUserData] = useState(mainState(GraphicDataFunc()));\n  const [nkuData, setNkuData] = useState(mainState(listNkuSystem));\n\n  function mainState(arrayGraphicData) {\n    let nku = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Все НКУ';\n    return {\n      labels: arrayGraphicData.map(data => data.machineNum),\n      datasets: [{\n        label: nku,\n        data: arrayGraphicData.map(data => data.countAccident),\n        backgroundColor: [\"rgb(6,255,255)\", \"rgb(255,53,53)\", \"rgb(136,255,88)\", \"rgb(166,0,163)\", \"rgb(255,215,64)\", \"rgb(52,88,255)\", \"rgb(255,137,99)\", \"rgb(238,113,255)\", \"rgb(255,21,100)\"],\n        borderColor: \"#505050\",\n        borderWidth: 1\n      }]\n    };\n  }\n\n  function DoughnutFunc(data) {\n    return {\n      labels: data.map(data => data.schema),\n      datasets: [{\n        label: 'Низковольтные комплектные устройства',\n        data: data.map(data => data.count),\n        backgroundColor: [\"rgb(127,66,255)\", \"rgb(245,44,157)\", \"rgb(0,255,94)\", \"rgb(0,44,255)\", \"rgb(147,244,255)\", \"rgb(236,119,255)\", \"rgb(238,161,136)\"],\n        borderColor: \"#505050\",\n        borderWidth: 1\n      }]\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-lg center\",\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 420\n        },\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          chartData: userData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          width: 420\n        },\n        children: [\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u041D\\u041A\\u0423 \\u0434\\u043B\\u044F \\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0430 \\u0441\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0438 \\u043F\\u043E \\u042D\\u041A\\u0413\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: onDataChange,\n          className: \"form-select\",\n          \"aria-label\": \"Default select example\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            children: \"\\u0412\\u0441\\u0435 \\u041D\\u041A\\u0423\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), listNkuSystem.map(nku => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: nku.schema,\n            children: nku.schema\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 420\n          },\n          children: /*#__PURE__*/_jsxDEV(DoughnutChart, {\n            chartData: DoughnutFunc(listNkuSystem)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}; // <div style={{ width: 480 }}>\n//     <LineChart chartData={userData} />\n// </div>\n// <div style={{ width: 480 }}>\n//     <PieChart chartData={userData} />\n// </div>\n\n\n_s(Statistic, \"Ji/VIm1tONwcSqcLvf+6rKfYxds=\");\n\n_c = Statistic;\nexport default Statistic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistic\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/my-app-master/src/components/statistic/statistic.jsx"],"names":["React","Component","useEffect","useState","Menu","BarChart","LineChart","PieChart","style","DoughnutChart","Statistic","accidents","listMachine","addAccidentToState","listNkuSystem","i","length","tempSchema","schema","indexOf","push","j","count","k","GraphicDataFunc","acc","arrayGraphicData","map","machine","machineNum","Number","number","countAccident","filter","accident","numberMachine","nku","onDataChange","e","valueNku","currentTarget","value","tempGraphicData","setUserData","mainState","dataNku","userData","nkuData","setNkuData","labels","data","datasets","label","backgroundColor","borderColor","borderWidth","DoughnutFunc","width"],"mappings":"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","sourcesContent":["import React, {Component, useEffect, useState} from \"react\";\r\nimport Menu from \"../menu/menuContainer\";\r\nimport BarChart from \"./barChart\";\r\nimport LineChart from \"./DoughnutChart\";\r\nimport PieChart from \"./pieChart\";\r\nimport style from './statistic.module.css'\r\nimport DoughnutChart from \"./DoughnutChart\";\r\n\r\nconst Statistic = ({accidents, listMachine, addAccidentToState}) => {\r\n\r\n    let listNkuSystem = [];\r\n\r\n    for (let i = 0; i < listMachine.length; i++) {\r\n        let tempSchema = listMachine[i].schema\r\n        if (-1 === listNkuSystem.indexOf(tempSchema)) {\r\n            listNkuSystem.push(tempSchema)\r\n        }\r\n    }\r\n    for (let j = 0; j < listNkuSystem.length; j++) {\r\n        listNkuSystem[j] = {schema: listNkuSystem[j], count: 0}\r\n        for (let k = 0; k < listMachine.length; k++) {\r\n              if (listNkuSystem[j].schema === listMachine[k].schema) {\r\n                  listNkuSystem[j].count = listNkuSystem[j].count + 1\r\n            }\r\n        }\r\n    }\r\n\r\n    function GraphicDataFunc(acc = accidents) {\r\n        let arrayGraphicData = [];\r\n\r\n        listMachine.map(\r\n            machine =>\r\n                arrayGraphicData.push({\r\n                    machineNum: Number(machine.number),\r\n                    countAccident: acc.filter(accident => Number(accident.numberMachine) === Number(machine.number)).length,\r\n                    nku: machine.schema\r\n                }))\r\n\r\n        return arrayGraphicData;\r\n    }\r\n\r\n    let onDataChange = (e) => {\r\n        let valueNku = e.currentTarget.value\r\n        let tempGraphicData = GraphicDataFunc()\r\n        if (valueNku === 'Все НКУ') {\r\n            setUserData(mainState(tempGraphicData, valueNku))\r\n        } else {\r\n            tempGraphicData = tempGraphicData.filter(dataNku => dataNku.nku === valueNku)\r\n            setUserData(mainState(tempGraphicData, valueNku))\r\n        }\r\n    }\r\n\r\n// eslint-disable-next-line react-hooks/rules-of-hooks\r\n    const [userData, setUserData] = useState(mainState(GraphicDataFunc()))\r\n    const [nkuData, setNkuData] = useState(mainState(listNkuSystem))\r\n\r\n    function mainState(arrayGraphicData, nku = 'Все НКУ') {\r\n        return {\r\n            labels: arrayGraphicData.map((data) => data.machineNum),\r\n            datasets: [\r\n                {\r\n                    label: nku,\r\n                    data: arrayGraphicData.map((data) => data.countAccident),\r\n                    backgroundColor: [\r\n                        \"rgb(6,255,255)\",\r\n                        \"rgb(255,53,53)\",\r\n                        \"rgb(136,255,88)\",\r\n                        \"rgb(166,0,163)\",\r\n                        \"rgb(255,215,64)\",\r\n                        \"rgb(52,88,255)\",\r\n                        \"rgb(255,137,99)\",\r\n                        \"rgb(238,113,255)\",\r\n                        \"rgb(255,21,100)\"\r\n                    ],\r\n                    borderColor: \"#505050\",\r\n                    borderWidth: 1,\r\n                },\r\n            ],\r\n        }\r\n    }\r\n\r\n    function DoughnutFunc(data) {\r\n        return {\r\n            labels: data.map((data) => data.schema),\r\n            datasets: [\r\n                {\r\n                    label: 'Низковольтные комплектные устройства',\r\n                    data: data.map((data) => data.count),\r\n                    backgroundColor: [\r\n                        \"rgb(127,66,255)\",\r\n                        \"rgb(245,44,157)\",\r\n                        \"rgb(0,255,94)\",\r\n                        \"rgb(0,44,255)\",\r\n                        \"rgb(147,244,255)\",\r\n                        \"rgb(236,119,255)\",\r\n                        \"rgb(238,161,136)\"\r\n                    ],\r\n                    borderColor: \"#505050\",\r\n                    borderWidth: 1,\r\n                },\r\n            ],\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-lg center\">\r\n        <Menu />\r\n            <div className=\"row\">\r\n                <div style={{ width: 420 }}>\r\n                    <BarChart chartData={userData} />\r\n                </div>\r\n                <span style={{ width: 420 }}>\r\n                    Выберите НКУ для просмотра статистики по ЭКГ\r\n                    <br/>\r\n                    <br/>\r\n                        <select onChange={onDataChange} className=\"form-select\" aria-label=\"Default select example\">\r\n                            <option selected>Все НКУ</option>\r\n                            {listNkuSystem.map(nku =>\r\n                                <option value={nku.schema}>{nku.schema}</option>\r\n                            )}\r\n                        </select>\r\n                </span>\r\n                <div>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                     <div style={{ width: 420 }}>\r\n                         <DoughnutChart chartData={DoughnutFunc(listNkuSystem)} />\r\n                     </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n\r\n}\r\n// <div style={{ width: 480 }}>\r\n//     <LineChart chartData={userData} />\r\n// </div>\r\n// <div style={{ width: 480 }}>\r\n//     <PieChart chartData={userData} />\r\n// </div>\r\nexport default Statistic;"]},"metadata":{},"sourceType":"module"}