{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\my-app-master\\\\src\\\\components\\\\hooks\\\\use-auth.js\";\nimport React from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport HeaderContainer from '../header/headerContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nlet mapStateToPropsForRedirect = state => {\n  return {\n    isAuth: state.UserPage.isAuth\n  };\n};\n\nexport const AuthRedirect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/welcome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 24\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(HeaderContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Component, { ...this.props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    }\n\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n  return ConnectedAuthRedirectComponent;\n};\n_c = AuthRedirect;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthRedirect\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/my-app-master/src/components/hooks/use-auth.js"],"names":["React","connect","useSelector","Redirect","HeaderContainer","mapStateToPropsForRedirect","state","isAuth","UserPage","AuthRedirect","Component","RedirectComponent","render","props","ConnectedAuthRedirectComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAiBC,WAAjB,QAAmC,aAAnC;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;;;;AAEA,IAAIC,0BAA0B,GAAIC,KAAD,IAAW;AACxC,SAAO;AACHC,IAAAA,MAAM,EAAED,KAAK,CAACE,QAAN,CAAeD;AADpB,GAAP;AAGH,CAJD;;AAMA,OAAO,MAAME,YAAY,GAAIC,SAAD,IAAe;AACvC,QAAMC,iBAAN,SAAgCX,KAAK,CAACU,SAAtC,CAAgD;AAC5CE,IAAAA,MAAM,GAAG;AACL,UAAG,CAAC,KAAKC,KAAL,CAAWN,MAAf,EAAuB;AACnB,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;;AACD,0BACI;AAAA,gCACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,SAAD,OAAe,KAAKM;AAApB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,sBADJ;AAQH;;AAb2C;;AAgBhD,MAAIC,8BAA8B,GAAGb,OAAO,CAACI,0BAAD,CAAP,CAAoCM,iBAApC,CAArC;AAEA,SAAOG,8BAAP;AACH,CApBM;KAAML,Y","sourcesContent":["import React from \"react\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport HeaderContainer from '../header/headerContainer'\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.UserPage.isAuth\r\n    }\r\n}\r\n\r\nexport const AuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) {\r\n                return <Redirect to={\"/welcome\"} />\r\n            }\r\n            return (\r\n                <>\r\n                    <HeaderContainer />\r\n                    <Component {...this.props} />\r\n                </>\r\n\r\n                )\r\n\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"]},"metadata":{},"sourceType":"module"}