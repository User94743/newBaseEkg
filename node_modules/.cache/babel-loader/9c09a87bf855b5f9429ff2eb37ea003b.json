{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\my-app-master\\\\src\\\\components\\\\welcome\\\\welcome.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { Link, NavLink, Route, useHistory } from \"react-router-dom\";\nimport { FormAuth } from \"../FormsAuth/FormAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Welcome = props => {\n  _s();\n\n  const {\n    push\n  } = useHistory();\n\n  const handleLogin = (email, password) => {\n    const auth = getAuth();\n    signInWithEmailAndPassword(auth, email, password).then(_ref => {\n      let {\n        user\n      } = _ref;\n      console.log(\"23123\");\n      props.setUser(user.email, user.accessToken, user.uid);\n      push('/');\n    }).catch(error => {\n      let msgError = '';\n\n      if (error.code === 'auth/too-many-requests') {\n        msgError = 'Превышено число запросов. Попробуйте позже';\n      } else if (error.code === 'auth/wrong-password' || error.code === 'auth/user-not-found') {\n        msgError = 'Неверный логин или пароль';\n      } else if (error.code === 'auth/invalid-email') {\n        msgError = 'Введите логин и пароль';\n      } else {\n        msgError = 'Неизвестная ошибка: ' + error.code;\n      }\n\n      props.setMessageError(msgError);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormAuth, {\n    title: \"Войти\",\n    handleClick: handleLogin,\n    messageError: props.messageError,\n    setMessageError: props.setMessageError\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Welcome, \"9JfH1GuYu+ZbU2wrj13eQCg5IpE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Welcome;\nexport default Welcome;\n\nvar _c;\n\n$RefreshReg$(_c, \"Welcome\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/my-app-master/src/components/welcome/welcome.jsx"],"names":["React","getAuth","signInWithEmailAndPassword","Link","NavLink","Route","useHistory","FormAuth","Welcome","props","push","handleLogin","email","password","auth","then","user","console","log","setUser","accessToken","uid","catch","error","msgError","code","setMessageError","messageError"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,0BAAlB,QAAoD,eAApD;AACA,SAAQC,IAAR,EAAcC,OAAd,EAAuBC,KAAvB,EAA8BC,UAA9B,QAA+C,kBAA/C;AACA,SAAQC,QAAR,QAAuB,uBAAvB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAEvB,QAAM;AAACC,IAAAA;AAAD,MAASJ,UAAU,EAAzB;;AACA,QAAMK,WAAW,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACrC,UAAMC,IAAI,GAAGb,OAAO,EAApB;AACAC,IAAAA,0BAA0B,CAACY,IAAD,EAAOF,KAAP,EAAcC,QAAd,CAA1B,CACKE,IADL,CACU,QAAY;AAAA,UAAX;AAACC,QAAAA;AAAD,OAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAT,MAAAA,KAAK,CAACU,OAAN,CAAcH,IAAI,CAACJ,KAAnB,EAA0BI,IAAI,CAACI,WAA/B,EAA4CJ,IAAI,CAACK,GAAjD;AACAX,MAAAA,IAAI,CAAC,GAAD,CAAJ;AACH,KALL,EAMKY,KANL,CAMYC,KAAD,IAAW;AACV,UAAIC,QAAQ,GAAG,EAAf;;AACA,UAAID,KAAK,CAACE,IAAN,KAAe,wBAAnB,EAA6C;AACzCD,QAAAA,QAAQ,GAAG,4CAAX;AACH,OAFD,MAGK,IAAID,KAAK,CAACE,IAAN,KAAe,qBAAf,IAAwCF,KAAK,CAACE,IAAN,KAAe,qBAA3D,EAAkF;AACnFD,QAAAA,QAAQ,GAAG,2BAAX;AACH,OAFI,MAGA,IAAID,KAAK,CAACE,IAAN,KAAe,oBAAnB,EAAyC;AAC1CD,QAAAA,QAAQ,GAAG,wBAAX;AACH,OAFI,MAGA;AACDA,QAAAA,QAAQ,GAAG,yBAAyBD,KAAK,CAACE,IAA1C;AACH;;AACDhB,MAAAA,KAAK,CAACiB,eAAN,CAAsBF,QAAtB;AACH,KArBT;AAuBH,GAzBD;;AA0BA,sBAAO,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE,OAAjB;AAA0B,IAAA,WAAW,EAAEb,WAAvC;AAAoD,IAAA,YAAY,EAAEF,KAAK,CAACkB,YAAxE;AAAsF,IAAA,eAAe,EAAElB,KAAK,CAACiB;AAA7G;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH,CA/BD;;GAAMlB,O;UAEaF,U;;;KAFbE,O;AAiCN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport {Link, NavLink, Route, useHistory} from \"react-router-dom\";\nimport {FormAuth} from \"../FormsAuth/FormAuth\";\n\nconst Welcome = (props) => {\n\n    const {push} = useHistory()\n    const handleLogin = (email, password) => {\n        const auth = getAuth();\n        signInWithEmailAndPassword(auth, email, password)\n            .then(({user}) => {\n                console.log(\"23123\")\n                props.setUser(user.email, user.accessToken, user.uid)\n                push('/')\n            })\n            .catch((error) => {\n                    let msgError = '';\n                    if (error.code === 'auth/too-many-requests') {\n                        msgError = 'Превышено число запросов. Попробуйте позже'\n                    }\n                    else if (error.code === 'auth/wrong-password' || error.code === 'auth/user-not-found') {\n                        msgError = 'Неверный логин или пароль'\n                    }\n                    else if (error.code === 'auth/invalid-email') {\n                        msgError = 'Введите логин и пароль'\n                    }\n                    else {\n                        msgError = 'Неизвестная ошибка: ' + error.code\n                    }\n                    props.setMessageError(msgError)\n                }\n            )\n    }\n    return <FormAuth title={\"Войти\"} handleClick={handleLogin} messageError={props.messageError} setMessageError={props.setMessageError} />\n\n}\n\nexport default Welcome;"]},"metadata":{},"sourceType":"module"}